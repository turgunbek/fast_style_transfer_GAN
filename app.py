import streamlit as st
import torch
import os
import time
from PIL import Image
from torchvision.utils import save_image
from saved_models.pretrained_models import PRETRAINED_MODELS
from stylize_image import stylize_image
from stylize_video import stylize_video


device = "cuda" if torch.cuda.is_available() else "cpu"

st.title("üé® Fast Style Transfer")
st.write("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏.")

content_type = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø:", ["–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "–í–∏–¥–µ–æ"])

if "selected_style" not in st.session_state:
    st.session_state.selected_style = None

# --- üñº **–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è** ---
if content_type == "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ":
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...",
                                     type=["jpg", "jpeg", "png"])

    if uploaded_file is not None:
        image = Image.open(uploaded_file)
        st.image(image, caption="–ò—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
                 use_container_width=True)

        st.write("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å:")
        col1, col2, col3, col4 = st.columns(4)

        style_images = {
            "starry_night": "images/style_images/starry-night.jpg",
            "rain_princess": "images/style_images/rain-princess.jpg",
            "abstract": "images/style_images/abstract-dalle.png",
            "mosaic": "images/style_images/mosaic.jpg"
        }

        def select_style(style_name):
            st.session_state.selected_style = style_name  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª—å

        with col1:
            if st.button("Starry Night"):
                select_style("starry_night")
        with col2:
            if st.button("Rain Princess"):
                select_style("rain_princess")
        with col3:
            if st.button("Abstract"):
                select_style("abstract")
        with col4:
            if st.button("Mosaic"):
                select_style("mosaic")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±–æ—Ä
        if st.session_state.selected_style:
            st.write(f"–í—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å: {st.session_state.selected_style}")
            st.image(style_images[st.session_state.selected_style],
                     use_container_width=True)

            model_path = PRETRAINED_MODELS[st.session_state.selected_style]

            if st.button("–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å"):
                stylized_image = stylize_image(image, image_size=512,
                                               model_path=model_path)

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ session_state
                st.session_state["stylized_image"] = stylized_image

                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                output_path = f"images/generated_images/\
                    stylized_{uploaded_file.name}"
                save_image(stylized_image, output_path)
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
                st.session_state["output_path"] = output_path

        # ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∏–∑ session_state
        if "stylized_image" in st.session_state:
            st.image(st.session_state["output_path"],
                     caption="–°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
                     use_container_width=True)

            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            with open(st.session_state["output_path"], "rb") as file:
                st.download_button(label="–°–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
                                   data=file,
                                   file_name=st.session_state["output_path"],
                                   mime="image/png")

# --- üé• **–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–µ–æ** ---
elif content_type == "–í–∏–¥–µ–æ":
    uploaded_video = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ (MP4)...", type=["mp4"])

    if uploaded_video is not None:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        input_video_path = f"videos/{uploaded_video.name}"
        with open(input_video_path, "wb") as f:
            f.write(uploaded_video.read())

        st.video(input_video_path)
        st.write(f"–í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {uploaded_video.name}")

        # –í—ã–±–æ—Ä —Å—Ç–∏–ª—è
        selected_style = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å:",
                                      list(PRETRAINED_MODELS.keys()))
        model_path = PRETRAINED_MODELS[selected_style]

        if st.button("–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å"):
            output_video_path = f"videos/stylized_{uploaded_video.name}"

            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            progress_bar = st.progress(0)
            status_text = st.empty()

            # –ó–∞–ø—É—Å–∫ —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
            msg = "–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–µ–æ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç ‚è≥"
            with st.spinner(msg):
                output_video_path = stylize_video(
                    video_path=input_video_path,
                    model_path=model_path,
                    save_path=output_video_path,
                    frames_per_step=8,  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –∑–∞ –æ–¥–∏–Ω —à–∞–≥
                    image_size=128,
                    progress_bar=progress_bar,
                    status_text=status_text
                )

            # ‚úÖ –ñ–¥—ë–º, –ø–æ–∫–∞ —Ñ–∞–π–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ—è–≤–∏—Ç—Å—è
            while (not os.path.exists(output_video_path) or
                   os.path.getsize(output_video_path) == 0):
                time.sleep(1)

            st.success("‚úÖ –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

            # ‚úÖ **–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ session_state**
            st.session_state["stylized_video"] = output_video_path

        if "stylized_video" in st.session_state:
            video_path = st.session_state["stylized_video"]

            if os.path.exists(video_path) and os.path.getsize(video_path) > 0:
                st.video(os.path.abspath(video_path))
            else:
                st.warning("‚ö†Ô∏è –í–∏–¥–µ–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–æ.")

            # ‚úÖ –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
            with open(video_path, "rb") as f:
                st.download_button(
                    label="üì• –°–∫–∞—á–∞—Ç—å —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ",
                    data=f,
                    file_name=os.path.basename(video_path),
                    mime="video/mp4",
                )
